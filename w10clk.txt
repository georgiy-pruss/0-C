0123456789. enter number, e.g. 42 or 3.1415
+-          can be used for numbers with sign, e.g. +10 (sometimes it's not 10)
ABCDEF      hex digits (uppercase!) for hexadecimal numbers, e.g. 7FFF (but only before h)
:/_         enter time, dates e.g. 3/11 or 2:00 or 2016/11/10_23:59:59
+-*/()      enter math. expression
=           calculate expression

bksp        correct input
spc         clear display

d      get current date as y/m/d wd #yd (wd - weekday, yd - year day 1..366)
Dd     convert YYYY/MM/DD to n wd, e.g. 2016/11/13 --> 736283 Fri (See CED below)
Nd     convert CED as plain number to y/m/d wd, e.g. 730122 --> 2000/1/1
u      current unix time (for local time)
Nu     unix time to y/m/d_h:m:s wd (with current tz) (1970/01/01..2106/02/07)
n      seconds (of day) now, 0 to 86400
z      current time zone as +HHMM or -HHMM, e.g. +0200

Nh     convert hex to decimal (mind Z80 assembly -- 7FFFh :))
N#     convert decimal to hex (hex/dec conversion is unsigned <2^64)
Nc     convert Celsius to Farenheit
Nf     convert Farenheit to Celsius

s      start stopwatch (actually just remember moment of start)
e      elapsed since start (or end, finish), also shows break time, work time
b      break (don't count this time, start time of break)
g      go on (end of break)

^C     copy display to clipboard
^V     paste clipboard into display

^T     toggle showing time in window caption bar aka title (option 'intitle')
tab    toggle showing seconds hand, same as right button (option 'seconds')

_______________

CED    Common Era Day number -- number of a day since January 1st, 1 AD, i.e.
       that was day 1, then January 2nd was day 2 and so on, using Julian
       calendar (year divisable by 4 are all leap), till 1582/10/4 (CED 577737),
       when the counting scheme switches to Gregorian calendar and day 1582/10/15
       (CED 577738) follows. Such enumeration was chosen to eliminate negative
       numbers and to have somewhat natural scheme.
       CED 730122 = Julian Day Number 2451545 (the difference is 1721423)
